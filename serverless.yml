service: funding-payments-bot

useDotenv: true

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-export-env

custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  snsTopic: ${self:service}-${self:provider.stage}-topic
  snsTopicArn:
    {
      'Fn::Join':
        [
          '',
          [
            'arn:aws:sns:${self:provider.region}:',
            { 'Ref': 'AWS::AccountId' },
            ':${self:custom.snsTopic}',
          ],
        ],
    }

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  environment:
    EVM: ${self:provider.stage}
    CLEARING_HOUSE: 0x115eB30d254161Fc7C16a2E20c1c34aCbA56cCD1
    WALLET_PK: ${ssm:/infinix/${self:custom.stage}/funding-payments-bot/walletPk}
    PROVIDER_URL: ${ssm:/infinix/${self:custom.stage}/funding-payments-bot/providerUrl}
    TASK_TABLE: { Ref: TaskTable }
    TASK_TOPIC: ${self:custom.snsTopicArn}
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - sns:*
          Resource: '*'

resources:
  Resources:
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-db
        AttributeDefinitions:
          - AttributeName: ammId
            AttributeType: S
        KeySchema:
          - AttributeName: ammId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    SnsTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: SnsTopicPolicy
              Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action: sns:Publish
              Resource: '*'
        Topics:
          - ${self:custom.snsTopicArn}

functions:
  scheduler:
    handler: src/services/scheduler.main
    timeout: 900
    environment:
      SUBGRAPH_URL: https://api.thegraph.com/subgraphs/name/infinix-finance/dev-fuji-positions
    # TODO: needs to be replaced with schedule
    events:
      - httpApi:
          method: GET
          path: /scheduler
  alarm:
    handler: src/services/alarm.main
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - TaskTable
              - StreamArn
          maximumRetryAttempts: 1
          batchSize: 1
          filterPatterns:
            - eventName: [INSERT]
  executor:
    handler: src/services/executor.main
    events:
      - sns: ${self:custom.snsTopic}
